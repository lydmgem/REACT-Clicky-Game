{"map":"{\"version\":3,\"sources\":[\"/Users/lydmgem/Desktop/Coding-Bootcamp/Homework/2019/April/Apr-21/REACT-Clicky-Game/src/components/Scoreboard/Scoreboard.js\",\"/Users/lydmgem/Desktop/Coding-Bootcamp/Homework/2019/April/Apr-21/REACT-Clicky-Game/src/components/Jumbotron/Jumbotron.js\",\"/Users/lydmgem/Desktop/Coding-Bootcamp/Homework/2019/April/Apr-21/REACT-Clicky-Game/src/App.js\",\"/Users/lydmgem/Desktop/Coding-Bootcamp/Homework/2019/April/Apr-21/REACT-Clicky-Game/src/serviceWorker.js\",\"/Users/lydmgem/Desktop/Coding-Bootcamp/Homework/2019/April/Apr-21/REACT-Clicky-Game/src/index.js\"],\"names\":[\"Scoreboard\",\"props\",\"react_default\",\"a\",\"createElement\",\"className\",\"msg\",\"score\",\"topScore\",\"Jumbotron\",\"App\",\"state\",\"characters\",\"charSelect\",\"id\",\"sortedChars\",\"_this\",\"sort\",\"Math\",\"random\",\"setState\",\"selectedChar\",\"find\",\"character\",\"console\",\"log\",\"clicked\",\"charArr\",\"i\",\"length\",\"butterflies\",\"reset\",\"map\",\"topscore\",\"_this2\",\"this\",\"Fragment\",\"components_Scoreboard_Scoreboard\",\"href\",\"components_Jumbotron_Jumbotron\",\"index\",\"Card_default\",\"key\",\"image\",\"React\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from \\\"react\\\";\\nimport \\\"./Scoreboard.css\\\";\\n\\nconst Scoreboard = props => (\\n  \\n    <nav className=\\\"fixed-top\\\">\\n      <div className=\\\"title\\\">Clicky Game</div>\\n      <div className=\\\"header\\\">{props.msg}</div>\\n      <div className=\\\"score\\\">Score: {props.score} | Top Score: {props.topScore}</div>\\n    </nav>\\n  \\n);\\n\\nexport default Scoreboard;\\n\",\"import React from \\\"react\\\";\\nimport \\\"./Jumbotron.css\\\";\\n\\nconst Jumbotron = props => (\\n  \\n    <div className=\\\"jumbotron jumbotron-fluid\\\">\\n      <div className=\\\"container\\\">\\n        <h1 className=\\\"display-4\\\">Clicky Game!</h1>\\n        <p className=\\\"details\\\">Click on a character to earn a point, but be careful not to choose the same character you've chosen before!</p>\\n      </div>\\n    </div>\\n  \\n);\\nexport default Jumbotron;\",\"import React from \\\"react\\\";\\nimport Scoreboard from \\\"./components/Scoreboard\\\";\\nimport Jumbotron from \\\"./components/Jumbotron\\\"\\nimport Card from \\\"./components/Card\\\"\\nimport characters from \\\"./characters.json\\\";\\nimport \\\"./App.css\\\";\\n\\nclass App extends React.Component {\\n\\n  state = {\\n    characters: characters,\\n    score: 0,\\n    topScore: 0,\\n    msg: \\\"Click a character to begin!\\\"\\n  }\\n\\n  charSelect = id => {\\n\\n    const sortedChars = this.state.characters.sort(() => Math.random() - 0.5);\\n    this.setState({\\n      characters: sortedChars\\n    });\\n\\n    const selectedChar = this.state.characters.find(character => character.id === id);\\n    console.log(selectedChar);\\n\\n    if (selectedChar.clicked) {\\n      let charArr = this.state.characters;\\n\\n      for(let i = 0; i < charArr.length; i++) {\\n        charArr[i].clicked = false;\\n      }\\n\\n      this.setState({\\n        score: 0,\\n        characters: charArr,\\n        msg: \\\"Sorry, try again!\\\"\\n      })\\n    } \\n    else {\\n        selectedChar.clicked = true;\\n\\n        if (this.state.score < 11) {\\n          //console.log(\\\"SCORE < 12 before adding 1\\\", this.state.score);\\n            this.setState({\\n              score: this.state.score + 1,\\n              msg: \\\"Good guess - keep on going!\\\"\\n            });\\n\\n            if(this.state.score === this.state.topScore) {\\n              this.setState({\\n                topScore: this.state.topScore + 1,\\n              });\\n            }\\n            console.log(\\\"ORIGINAL\\\", this.state.butterflies);\\n        } else if (this.state.score === 11){\\n\\n          //console.log(\\\"SCORE === 12 before clearing\\\", this.state.score);\\n          const reset = this.state.characters.map(character => {\\n            return {character, clicked: false}\\n           });\\n\\n           this.setState({\\n             score: 0,\\n             topscore: 0,\\n             characters: reset,\\n             msg: \\\"Congratulations, you've guessed them all correctly! Play again.\\\"\\n           });\\n\\n           console.log(\\\"CLEAR: \\\", reset)\\n           //console.log(\\\"SCORE === 12 after clearing\\\", this.state.score);\\n        }\\n\\n       }\\n      \\n  };\\n\\n    render() {\\n        return (\\n          <React.Fragment>\\n            <Scoreboard score={this.state.score} topscore={this.state.topScore} msg={this.state.msg}><a href=\\\".\\\">Clicky Game</a></Scoreboard>\\n            <Jumbotron />\\n\\n            <div className=\\\"container\\\">\\n              {\\n                this.state.characters.map((characters, index) => (\\n                  <Card\\n                  key={index}\\n                  id={characters.id}\\n                  image={characters.image}\\n                  charSelect={this.charSelect}/>\\n                ))\\n              }\\n            </div>\\n\\n            </React.Fragment>\\n        );\\n      }\\n  \\n}\\n\\nexport default App;\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,function(e,a){},,,,,function(e){e.exports=[{id:1,image:\"assets/images/bigbilly.jpg\",clicked:!1},{id:2,image:\"assets/images/blossom.png\",clicked:!1},{id:3,image:\"assets/images/bubbles.png\",clicked:!1},{id:4,image:\"assets/images/buttercup.png\",clicked:!1},{id:5,image:\"assets/images/femmefatale.gif\",clicked:!1},{id:6,image:\"assets/images/fuzzylumpkins.jpg\",clicked:!1},{id:7,image:\"assets/images/him.jpg\",clicked:!1},{id:8,image:\"assets/images/mayor.png\",clicked:!1},{id:9,image:\"assets/images/mojojojo.gif\",clicked:!1},{id:10,image:\"assets/images/pmorbucks.png\",clicked:!1},{id:11,image:\"assets/images/professor.png\",clicked:!1},{id:12,image:\"assets/images/sedusa.jpg\",clicked:!1}]},,,function(e,a,t){e.exports=t(20)},,,,,,function(e,a,t){},function(e,a,t){},function(e,a,t){},function(e,a,t){},function(e,a,t){\"use strict\";t.r(a);var c=t(0),s=t.n(c),r=t(3),i=t.n(r),o=(t(16),t(4)),n=t(5),l=t(8),m=t(6),g=t(9),d=(t(17),function(e){return s.a.createElement(\"nav\",{className:\"fixed-top\"},s.a.createElement(\"div\",{className:\"title\"},\"Clicky Game\"),s.a.createElement(\"div\",{className:\"header\"},e.msg),s.a.createElement(\"div\",{className:\"score\"},\"Score: \",e.score,\" | Top Score: \",e.topScore))}),u=(t(18),function(e){return s.a.createElement(\"div\",{className:\"jumbotron jumbotron-fluid\"},s.a.createElement(\"div\",{className:\"container\"},s.a.createElement(\"h1\",{className:\"display-4\"},\"Clicky Game!\"),s.a.createElement(\"p\",{className:\"details\"},\"Click on a character to earn a point, but be careful not to choose the same character you've chosen before!\")))}),h=t(2),p=t.n(h),f=t(7),k=(t(19),function(e){function a(){var e,t;Object(o.a)(this,a);for(var c=arguments.length,s=new Array(c),r=0;r<c;r++)s[r]=arguments[r];return(t=Object(l.a)(this,(e=Object(m.a)(a)).call.apply(e,[this].concat(s)))).state={characters:f,score:0,topScore:0,msg:\"Click a character to begin!\"},t.charSelect=function(e){var a=t.state.characters.sort(function(){return Math.random()-.5});t.setState({characters:a});var c=t.state.characters.find(function(a){return a.id===e});if(console.log(c),c.clicked){for(var s=t.state.characters,r=0;r<s.length;r++)s[r].clicked=!1;t.setState({score:0,characters:s,msg:\"Sorry, try again!\"})}else if(c.clicked=!0,t.state.score<11)t.setState({score:t.state.score+1,msg:\"Good guess - keep on going!\"}),t.state.score===t.state.topScore&&t.setState({topScore:t.state.topScore+1}),console.log(\"ORIGINAL\",t.state.butterflies);else if(11===t.state.score){var i=t.state.characters.map(function(e){return{character:e,clicked:!1}});t.setState({score:0,topscore:0,characters:i,msg:\"Congratulations, you've guessed them all correctly! Play again.\"}),console.log(\"CLEAR: \",i)}},t}return Object(g.a)(a,e),Object(n.a)(a,[{key:\"render\",value:function(){var e=this;return s.a.createElement(s.a.Fragment,null,s.a.createElement(d,{score:this.state.score,topscore:this.state.topScore,msg:this.state.msg},s.a.createElement(\"a\",{href:\".\"},\"Clicky Game\")),s.a.createElement(u,null),s.a.createElement(\"div\",{className:\"container\"},this.state.characters.map(function(a,t){return s.a.createElement(p.a,{key:t,id:a.id,image:a.image,charSelect:e.charSelect})})))}}]),a}(s.a.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(s.a.createElement(k,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[10,1,2]]]);","extractedComments":[]}