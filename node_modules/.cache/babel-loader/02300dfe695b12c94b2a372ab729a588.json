{"ast":null,"code":"import _classCallCheck from \"/Users/lydmgem/Desktop/Coding-Bootcamp/Homework/2019/April/Apr-21/REACT-Clicky-Game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lydmgem/Desktop/Coding-Bootcamp/Homework/2019/April/Apr-21/REACT-Clicky-Game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lydmgem/Desktop/Coding-Bootcamp/Homework/2019/April/Apr-21/REACT-Clicky-Game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lydmgem/Desktop/Coding-Bootcamp/Homework/2019/April/Apr-21/REACT-Clicky-Game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lydmgem/Desktop/Coding-Bootcamp/Homework/2019/April/Apr-21/REACT-Clicky-Game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lydmgem/Desktop/Coding-Bootcamp/Homework/2019/April/Apr-21/REACT-Clicky-Game/src/App.js\";\nimport React, { Component } from 'react';\nimport characters from './characters.json';\nimport Scoreboard from './components';\nimport Card from './Card';\nimport './App.css'; // Shuffle the cards as the player clicks card\n\nfunction shuffler(arr) {\n  for (var i = arr.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var _ref = [arr[j], arr[i]];\n    arr[i] = _ref[0];\n    arr[j] = _ref[1];\n  }\n\n  return arr;\n}\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      characters: characters,\n      score: 0,\n      topScore: 0,\n      scoreAlert: 0,\n      scoreSuccess: 0,\n      chosenChar: []\n    };\n\n    _this.clickedChar = function (id) {\n      // assign the state of empty array to be updated\n      var chosenChar = _this.state.chosenChar;\n      var score = _this.state.score;\n      var topScore = _this.state.topScore;\n\n      _this.setState({\n        scoreAlert: 0\n      });\n\n      if (chosenChar.indexOf(id) === -1) {\n        chosenChar.push(id);\n        console.log(chosenChar); // score function\n\n        _this.handleIncrement(); // reshuffle after each click\n\n\n        _this.reShuffle();\n      } else if (_this.state.score === 12) {\n        // alert the player's success\n        _this.setState({\n          scoreSuccess: 1,\n          score: 0,\n          msg: \"Congratulations! You've guessed them all correctly. Play again!\",\n          chosenChar: []\n        });\n      } else {\n        // alert the player's loss\n        _this.setState({\n          score: 0,\n          msg: \"Sorry, try again.\",\n          chosenChar: []\n        });\n\n        console.log('already chosen');\n\n        _this.setState({\n          scoreAlert: 1\n        });\n      }\n\n      if (score > topScore) {\n        _this.setState({\n          topScore: score\n        });\n      }\n    };\n\n    _this.handleIncrement = function () {\n      _this.setState({\n        count: _this.state.score + 1\n      });\n    };\n\n    _this.reShuffle = function () {\n      _this.setState({\n        characters: shuffler(characters)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        style: {\n          opacity: this.state.scoreAlert\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"You already clicked this character, try again!\"), React.createElement(\"div\", {\n        className: \"alert alert-success\",\n        style: {\n          opacity: this.state.scoreSuccess\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Good job, keep going!\"), React.createElement(Scoreboard, {\n        title: \"PowerPuff Clicky Game\",\n        score: this.state.score,\n        topScore: this.state.topScore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.state.characters.map(function (characters) {\n        return React.createElement(Card, {\n          key: characters.id,\n          id: characters.id,\n          image: characters.image,\n          clickedChar: _this2.clickedChar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/lydmgem/Desktop/Coding-Bootcamp/Homework/2019/April/Apr-21/REACT-Clicky-Game/src/App.js"],"names":["React","Component","characters","Scoreboard","Card","shuffler","arr","i","length","j","Math","floor","random","App","state","score","topScore","scoreAlert","scoreSuccess","chosenChar","clickedChar","id","setState","indexOf","push","console","log","handleIncrement","reShuffle","msg","count","opacity","map","image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport characters from './characters.json';\nimport Scoreboard from './components'\nimport Card from './Card';\nimport './App.css';\n\n// Shuffle the cards as the player clicks card\nfunction shuffler(arr) {\n  for (let i = arr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n  return arr;\n}\n\nclass App extends Component {\n  state = {\n    characters,\n    score: 0,\n    topScore: 0,\n    scoreAlert: 0,\n    scoreSuccess: 0,\n    chosenChar: []\n  };\n\n  clickedChar = id => {\n    // assign the state of empty array to be updated\n    let chosenChar = this.state.chosenChar;\n    let score = this.state.score;\n    let topScore = this.state.topScore;\n\n    this.setState({\n      scoreAlert: 0\n    });\n\n    if (chosenChar.indexOf(id) === -1) {\n      chosenChar.push(id);\n      console.log(chosenChar);\n\n      // score function\n      this.handleIncrement();\n      // reshuffle after each click\n      this.reShuffle();\n    } else if (this.state.score === 12) {\n      // alert the player's success\n      this.setState({\n        scoreSuccess: 1,\n        score: 0,\n        msg: \"Congratulations! You've guessed them all correctly. Play again!\",\n        chosenChar: []\n      });\n    } else {\n      // alert the player's loss\n      this.setState({\n        score: 0,\n        msg: \"Sorry, try again.\",\n        chosenChar: []\n      });\n      console.log('already chosen');\n      this.setState({\n        scoreAlert: 1\n      });\n    }\n\n    if (score > topScore) {\n      this.setState({\n        topScore: score,\n      });\n    }\n  };\n\n  // handleIncrement; increments this.state.score by 1\n  handleIncrement = () => {\n    this.setState({ count: this.state.score + 1 });\n  };\n\n  // shuffler\n  reShuffle = () => {\n    this.setState ({ characters: shuffler(characters) });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"alert alert-danger\" style={{ opacity: this.state.scoreAlert }}>You already clicked this character, try again!\n        </div>\n        <div className=\"alert alert-success\" style={{ opacity: this.state.scoreSuccess }}>Good job, keep going!\n        </div>\n        <Scoreboard\n        title=\"PowerPuff Clicky Game\"\n        score={this.state.score}\n        topScore={this.state.topScore} />\n        <div className=\"row\">\n          {this.state.characters.map(characters => (\n            <Card \n            key={characters.id}\n            id={characters.id}\n            image={characters.image}\n            clickedChar={this.clickedChar}\n            />\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}